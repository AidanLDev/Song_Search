{"version":3,"sources":["components/ui/Input.tsx","components/ui/Button.tsx","components/ui/List.tsx","components/Heading.tsx","components/Body.tsx","pages/Home.tsx","App.tsx","index.js"],"names":["Input","inputValue","handleChange","inputLabel","htmlFor","className","id","type","value","onChange","Button","buttonLabel","handleClick","onClick","List","listItems","map","item","key","Heading","headingText","Body","useState","songId","setSongId","searchedSong","setSearchedSong","title","setTitle","titles","setTitles","artist","setArtist","notFound","setNotFound","event","target","fetch","window","location","origin","then","res","text","trackObject","JSON","parse","length","titlesArray","forEach","track","push","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b08ddfc4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Props {\r\n  inputValue: string;\r\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  inputLabel: string;\r\n}\r\n\r\nconst Input: React.FC<Props> = ({ inputValue, handleChange, inputLabel }) => {\r\n  return (\r\n    <>\r\n      <label\r\n        htmlFor={inputLabel}\r\n        className='text-primary padding-right padding-left'\r\n      >\r\n        {inputLabel}\r\n      </label>\r\n      <input\r\n        className='margin-top'\r\n        id={inputLabel}\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  handleClick:\r\n    | ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void)\r\n    | undefined;\r\n  buttonLabel: string;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ buttonLabel, handleClick }) => {\r\n  return (\r\n    <button className='btn-primary margin-left' onClick={handleClick}>\r\n      {buttonLabel}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  listItems: string[];\r\n}\r\n\r\nconst List: React.FC<Props> = ({ listItems }) => {\r\n  return (\r\n    <ul className='list-unstyled'>\r\n      {listItems.map((item) => (\r\n        <li key={item}>{item}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  headingText: string;\r\n}\r\n\r\nconst Heading: React.FC<Props> = ({ headingText }) => {\r\n  return (\r\n    <div className='col-lg-10 align-self-end'>\r\n      <h1 className='text-uppercase text-white font-weight-bold'>\r\n        {headingText}\r\n      </h1>\r\n      <hr className='divider my-4' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import React, { useState } from 'react';\r\n\r\nimport Input from './ui/Input';\r\nimport Button from './ui/Button';\r\nimport List from './ui/List';\r\nimport Heading from './Heading';\r\n\r\nconst Body: React.FC = () => {\r\n  const [songId, setSongId] = useState<string>('');\r\n  const [searchedSong, setSearchedSong] = useState<string>('');\r\n  const [title, setTitle] = useState<string>('');\r\n  const [titles, setTitles] = useState<string[]>([]);\r\n  const [artist, setArtist] = useState<string>('');\r\n  const [notFound, setNotFound] = useState<boolean>(false);\r\n\r\n  const onIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue: string = event.target.value;\r\n    setSongId(inputValue);\r\n  };\r\n\r\n  // TODO: Change this into one handleInput function that checks eve\r\n  const onArtistChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue: string = event.target.value;\r\n    setSearchedSong(inputValue);\r\n  };\r\n\r\n  const getTrackById = () => {\r\n    fetch(`${window.location.origin}/songs/id/${songId}`)\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        try {\r\n          const trackObject = JSON.parse(res);\r\n          if (trackObject.length > 0) {\r\n            setNotFound(false);\r\n            setArtist(trackObject[0].artist);\r\n            setTitle(trackObject[0].title);\r\n            setTitles([]);\r\n          } else {\r\n            setNotFound(true);\r\n          }\r\n        } catch {\r\n          setNotFound(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getTracksByArtist = () => {\r\n    fetch(`${window.location.origin}/songs/${searchedSong}`)\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        try {\r\n          const trackObject = JSON.parse(res);\r\n          if (trackObject.length > 0) {\r\n            const titlesArray: string[] = [];\r\n            trackObject.forEach((track: { title: any }) => {\r\n              titlesArray.push(track.title);\r\n            });\r\n            setNotFound(false);\r\n            setArtist(trackObject[0].artist);\r\n            setTitles(titlesArray);\r\n          } else {\r\n            setNotFound(true);\r\n          }\r\n        } catch {\r\n          setNotFound(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='masthead'>\r\n      <div className='container h-100'>\r\n        <div className='row h-100 align-items-center justify-content-center text-center'>\r\n          <Heading headingText='Music Library' />\r\n          <div className='col-lg-8 align-self-baseline'>\r\n            <p className='text-white-75 font-weight-light mb-5'>\r\n              Search our music catalog\r\n            </p>\r\n            <Input\r\n              handleChange={onIdChange}\r\n              inputValue={songId}\r\n              inputLabel='Search via Id'\r\n            />\r\n            <Button handleClick={getTrackById} buttonLabel='Search' />\r\n            <br />\r\n            <Input\r\n              handleChange={onArtistChange}\r\n              inputValue={searchedSong}\r\n              inputLabel='Search Artist'\r\n            />\r\n            <Button handleClick={getTracksByArtist} buttonLabel='Search' />\r\n            <div className='text-white-75 font-weight-light mb-5'>\r\n              {artist && !notFound ? (\r\n                <div>\r\n                  Artist:\r\n                  <p className='text-primary padding-right'> {artist}</p>\r\n                  {titles.length > 1 ? 'Song Titles: ' : 'Song Title: '}\r\n                  <span className='text-primary'>\r\n                    {' '}\r\n                    {titles.length > 1 ? (\r\n                      <List listItems={titles} />\r\n                    ) : (\r\n                      title || titles\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {notFound && <p>Track not found</p>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from 'react';\r\n\r\nimport Body from '../components/Body';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Body />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './css/styles.css';\n\nimport Home from './pages/Home';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Home />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.tsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}